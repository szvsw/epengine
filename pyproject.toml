[tool.poetry]
name = "epengine"
version = "0.0.1"
description = "This is a repository for managing queues of EnergyPlus simulations with Hatchet."
authors = ["Sam Wolk <fwolk.sam@gmail.com>"]
repository = "https://github.com/szvsw/epengine"
documentation = "https://szvsw.github.io/epengine/"
readme = "README.md"
packages = [
  {include = "epengine"}
]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
hatchet-sdk = "^0.31.1"
pydantic = "^2.8.2"
boto3 = "^1.34.145"
pandas = "^2.2.2"
numpy = "<2.3"
tqdm = "^4.66.4"
tables = "^3.9.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.worker]
optional = true

[tool.poetry.group.api]
optional = true

[tool.poetry.group.worker.dependencies]
archetypal = {git = "https://github.com/samuelduchesne/archetypal", branch = "feature/508-basement-preprocessor-seems-to-fail-"}
# energy-pandas = "^0.3.5"
geomeppy = { git = "https://github.com/maynouf/geomeppy", branch = "fix-collections" }

[tool.poetry.group.api.dependencies]
fastapi = "^0.111.1"
uvicorn = {extras = ["standard"], version = "^0.30.3"}

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
jupyter = "^1.0.0"
ladybug-core = "^0.43.2"
pyright = "^1.1.381"
boto3-stubs = {extras = ["essential"], version = "^1.35.23"}

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.0"}
mkdocstrings-python = "^1.11.1"


[tool.poetry.group.coiled.dependencies]
coiled = "^1.36.0"
dask = {extras = ["complete"], version = "^2024.7.1"}

[tool.poetry.scripts]
worker = "epengine.worker.main:run"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["epengine"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pyright]
include = ["epengine", "tests"]
ignore = ["**/data/**"]
venvPath = "."
venv = ".venv"


[tool.ruff]
target-version = "py310"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
    # "D"
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.format]
preview = true

# [tool.ruff.lint.pydocstyle]
# convention = "google"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["epengine"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
