# The manifest for the "hatchet-api" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: hatchet-api
type: Backend Service


# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: '/'
  # You can specify a custom health check path. The default is "/".
  # healthcheck: '/'
  target_container: hatchet-frontend
  target_port: 80
  additional_rules:
    - path: 'api'
      healthcheck: '/api/ready'
      target_container: hatchet-api
      target_port: 8080

# Configuration for your containers and service.
image:
  location: ghcr.io/hatchet-dev/hatchet/hatchet-api:latest
  # Port exposed through your container to route traffic to it.
  port: 8080
command: /hatchet/hatchet-api --config /hatchet-appdata/config

cpu: 512       # Number of CPU units for the task.
memory: 1024    # Amount of memory in MiB used by the task.
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.

network:
  connect: false # Enable Service Connect for intra-environment traffic between services.
  vpc:
    placement: private
    security_groups:
      - from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-hatchetdbSecurityGroup
      - from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-hatchetbrokerSecurityGroup

secrets:
  DATABASE_URL:
    from_cfn: ${COPILOT_APPLICATION_NAME}-${COPILOT_ENVIRONMENT_NAME}-hatchetdbConnectionStringSecret

storage:
  volumes:
    hatchetCertsAndConfig:
      read_only: false
      path: /hatchet-appdata
      efs:
        id: # masked efs id 
        auth:
          iam: true
          access_point_id: # masked efs access_point_id

sidecars:
  hatchet-frontend:
    image:
      location: ghcr.io/hatchet-dev/hatchet/hatchet-frontend:latest
    port: 80
